;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.0 Professional
;Automatic Program Generator
;© Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 2020-11-05
;Author  :
;Company :
;Comments:
;
;Chip type               : ATmega128
;Program type            : Application
;AVR Core Clock frequency: 16.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 1024
;*****************************************************/
;
;#include <mega128.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include "board_init.h"
;
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 001D {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 001E // Place your code here
; 0000 001F 
; 0000 0020 }
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;
;// Declare your global variables here
;
;void main(void)
; 0000 0025 {
;PCODE: $00000012 VOL: 0
; 0000 0026 // Declare your local variables here
; 0000 0027 
; 0000 0028 systemInit();
;PCODE: $00000013 VOL: 0
; 0000 0029 
; 0000 002A // Global enable interrupts
; 0000 002B #asm("sei")
;PCODE: $00000014 VOL: 0
	sei
;PCODE: $00000015 VOL: 0
; 0000 002C 
; 0000 002D while (1)
;PCODE: $00000016 VOL: 0
; 0000 002E       {
; 0000 002F       // Place your code here
; 0000 0030       #if (0)
; 0000 0031       PORTA.0 = SET;
; 0000 0032       delay_ms(500);
; 0000 0033       PORTA.0 = CLR;
; 0000 0034       delay_ms(500);
; 0000 0035       #endif
; 0000 0036 
; 0000 0037       #if (0)
; 0000 0038       PORTA ^= 0x01;
; 0000 0039       delay_ms(500);
; 0000 003A       #endif
; 0000 003B 
; 0000 003C       #if (0)
; 0000 003D       PORTA &= 0x00;
; 0000 003E       delay_ms(500);
; 0000 003F       PORTA |= 0x01;
; 0000 0040       delay_ms(500);
; 0000 0041       #endif
; 0000 0042 
; 0000 0043       #if (1)
; 0000 0044       PORTA = 0x01;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0045       delay_ms(500);
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0046       PORTA = ~0xff;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0047       delay_ms(500);
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0048       #endif
; 0000 0049 
; 0000 004A       }
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 004B }
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
